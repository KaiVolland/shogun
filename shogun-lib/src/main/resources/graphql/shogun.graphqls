scalar JSON
scalar Geometry

type Query {
    allApplications: [Application]
    applicationById(id: Int): Application
    allApplicationsByIds(ids: [Int]): [Application]

    allFiles: [File]
    fileById(id: Int): File
    allFilesByIds(ids: [Int]): [File]

    allGroups: [Group]
    groupById(id: Int): Group
    allGroupsByIds(ids: [Int]): [Group]

    allImageFiles: [ImageFile]
    imageFileById(id: Int): ImageFile
    allImageFilesByIds(ids: [Int]): [ImageFile]

    allLayers: [Layer]
    layerById(id: Int): Layer
    allLayersByIds(ids: [Int]): [Layer]

    allUsers: [User]
    userById(id: Int): User
    allUsersByIds(ids: [Int]): [User]
}

type Mutation {
    createApplication(entity: MutateApplication): Application!
    updateApplication(id: Int, entity: MutateApplication): Application!
    deleteApplication(id: Int): Boolean

    createGroup(entity: MutateGroup): Group!
    updateGroup(id: Int, entity: MutateGroup): Group!
    deleteGroup(id: Int): Boolean

    createLayer(entity: MutateLayer): Layer!
    updateLayer(id: Int, entity: MutateLayer): Layer!
    deleteLayer(id: Int): Boolean

    createUser(entity: MutateUser): User!
    updateUser(id: Int, entity: MutateUser): User!
    deleteUser(id: Int): Boolean
}

type Application {
    id: Int
    created: String
    modified: String
    name: String
    i18n: JSON
    stateOnly: Boolean
    clientConfig: JSON
    layerTree: JSON
    layerConfig: JSON
    toolConfig: JSON
}

input MutateApplication {
    name: String!
    i18n: JSON
    stateOnly: Boolean
    clientConfig: JSON
    layerTree: JSON
    layerConfig: JSON
    toolConfig: JSON
}

type File {
    id: Int
    created: String
    modified: String
    fileUuid: ID
    active: Boolean
    fileName: String
    fileType: String
}

type GroupRepresentation {
    id: ID
    name: String
    path: String
    realmRoles: [String]
    subGroups: [GroupRepresentation]
}

type Group {
    id: Int
    created: String
    modified: String
    keycloakId: ID
    keycloakRepresentation: GroupRepresentation
}

input MutateGroup {
    keycloakId: ID
}

type ImageFile {
    id: Int
    created: String
    modified: String
    fileUuid: ID
    active: Boolean
    fileName: String
    fileType: String
    width: Int
    height: Int
}

type Layer {
    id: Int
    created: String
    modified: String
    name: String
    clientConfig: JSON
    sourceConfig: JSON
    features: JSON
    type: String
}

input MutateLayer {
    name: String!
    clientConfig: JSON
    sourceConfig: JSON
    features: JSON
    type: String
}

type UserRepresentation {
    id: ID
    username: String
    enabled: Boolean
    firstName: String
    lastName: String
    email: String
    realmRoles: [String]
    groups: [String]
}

type User {
    id: Int
    created: String
    modified: String
    keycloakId: ID
    details: JSON
    clientConfig: JSON
    keycloakRepresentation: UserRepresentation
}

input MutateUser {
    keycloakId: ID!
    details: JSON
    clientConfig: JSON
}
