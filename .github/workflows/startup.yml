# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Startup Shogun

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      KEYCLOAK_HOST: 1.2.3.4

    steps:
      - uses: actions/checkout@v2
      - name: Set up Java 17
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 17
          java-package: jdk
          architecture: x64

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run mvn install
        run: mvn install

      - name: Clone shogun-docker
        run: git clone https://github.com/terrestris/shogun-docker

      - name: Start containers
        run: docker-compose up -d
        working-directory: ./shogun-docker

      - name: Start spring-boot
        run: mvn spring-boot:run -Dspring-boot.run.profiles=base,boot > mvn.out.txt &

      - name: Check if application has started
        run: ./scripts/wait.sh

      - name: Docker logs
        if: always()
        run: docker-compose logs
        working-directory: ./shogun-docker

      - name: Maven output
        if: always()
        run: cat mvn.out.txt
